name: 🚀 Production Deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  quality-checks:
    name: ✅ Quality & Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "client/package-lock.json"

      - name: Install dependencies
        run: |
          cd client
          npm ci

      - name: Type check
        run: |
          cd client
          npm run build

      - name: Security audit
        run: |
          cd client
          npm audit --audit-level=high
        continue-on-error: true

  deploy-preview:
    name: 🔍 Preview Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: quality-checks
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "client/package-lock.json"

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel Environment (Preview)
        run: |
          cd client
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project
        run: |
          cd client
          vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel (Preview)
        id: deploy
        run: |
          cd client
          echo "url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT

      - name: Comment Preview URL
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 **Preview Deployment Ready!**
              
              📱 **Mobile-first design**: ${{ steps.deploy.outputs.url }}
              
              ✅ **What to test:**
              - Mobile responsiveness (390px width)
              - API connectivity with health badge
              - Route optimization workflow
              - Bottom sheet interactions (mobile)
              - Performance on slow connections`
            })

  deploy-production:
    name: 🌟 Production Deployment
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: quality-checks
    environment:
      name: production
      url: https://pick-path-optimizer.vercel.app
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "client/package-lock.json"

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel Environment (Production)
        run: |
          cd client
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project
        run: |
          cd client
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel (Production)
        id: deploy
        run: |
          cd client
          echo "url=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ steps.deploy.outputs.url }}
          configPath: "./client/lighthouserc.json"
          uploadArtifacts: true
          temporaryPublicStorage: true
        continue-on-error: true

      - name: Deployment Success Notification
        run: |
          echo "🎉 Production deployment successful!"
          echo "🌐 Live URL: ${{ steps.deploy.outputs.url }}"
          echo "📱 Mobile-optimized and ready for demo"
